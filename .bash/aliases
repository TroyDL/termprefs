# vim:filetype=sh

# ls aliases
if [[ `ls --color 2>/dev/null` ]]; then
  alias ls="ls --color -F"
else
  alias ls="ls -GF"
fi
alias lsa="ls -a"
alias lsA="ls -A"
alias l="ls -l"
alias ll="ls -l"
alias la="l -a"
alias lA="l -A"

# cd aliases
alias back="cd -"
alias cd.="cd ."
alias cd..="cd .."
alias cd...="cd ../.. && pwd"
alias cd....="cd ../../.. && pwd"
alias cd.....="cd ../../../.. && pwd"

# git aliases
alias gst="git status"
alias gc="git commit"
alias gca="git commit -a"
alias ga="git add"
alias gco="git checkout"
alias gb="git branch"
alias gm="git merge"
alias gd="git diff"
alias glo="git log --pretty=oneline"
alias hard-head="git reset --hard HEAD"

# Miscellaneous
alias so="source"
alias pbc="pbcopy"
alias pbp="pbpaste"
alias timestamp="date +%s"
alias grep="grep --color"
alias be="bundle exec"

# Cat with syntax highlighting.
[ `which pygmentize` ] \
  && alias ccat="pygmentize -O style=rrt -f console256 -g"

# Alias vim to terminal MacVim if possible.
[ `which mvim` ] \
  && alias vim="mvim -v"

# Umbrella help function. Attempts to try `help` with the given command. If
# that fails, `man` is attempted, followed by `<command> --help`.
function woman() {
  local command="$1"
  help "$command" 2>/dev/null && return 0
  man  "$command" 2>/dev/null && return 0
  eval "$command --help"
}

function ..() {
  case $# in
    0) cd .. ;;

    *) n=$1;
       dir='.';

       while [ $n -gt 0 ]; do
         dir="$dir/.."
         n=$(($n - 1))
       done

       cd $dir
       ;;
   esac
   pwd
}

# Pretty print path.
function ppp() {
  echo $PATH | sed -e 's/:\{1,\}/ /g' | tr ' ' '\n'
}

# Pushes a path on to $PATH.
function pushp() {
  if [ -n "$1" ]; then
    export PATH="$PATH:$1"
  fi
  ppp
}

# Pop a path from $PATH.
function popp() {
  export PATH="$(ppp | init | tr '\n' ':' | sed -e "s/:$//")"
  ppp
}

